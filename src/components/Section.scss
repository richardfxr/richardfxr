@use '../sass/breakpoints' as *;

.section, .footer {
    // internal variables
    --_skipLink-width: calc(1.7 * var(--font-md));
    --_skipLink-height: calc(1.7 * var(--font-md) + var(--targetSize-pad-5rem));

    display: grid;
    grid-template-columns: var(--section-side-width) 1fr;
    align-items: start;
    gap: var(--pad-lg);
    position: relative;

    padding-right: var(--section-pad-hrz);
    padding-left: var(--section-pad-hrz);

    & > .separator {
        position: absolute;
        top: 0;
        right: var(--section-pad-hrz);
        left: var(--section-pad-hrz);
    }

    &__side {
        position: sticky;
        top: 0;
        right: 0;
        left: 0;
        min-width: 0px;

        display: flex;
        flex-direction: column;
        gap: var(--padRem-sm);

        // top padding with alignment compensation
        padding-top: calc(var(--section-pad-vrt) - var(--padRem-5xs));
        // avoid overlapping separator
        margin-top: var(--border-width);

        .skipLinks {
            display: flex;
            flex-direction: row;
            gap: var(--padRem-xxxs);

            a {
                display: grid;
                align-items: center;
                width: var(--_skipLink-width);
                height: var(--_skipLink-height);    

                font-family: 'Inter', sans-serif;
                font-weight: 500;
                font-size: var(--font-md);
                text-align: center;

                // alignment compensation
                padding-top: var(--pad-6xs);
                border: solid var(--border-width) var(--clr-200);
                border-radius: var(--bradius-round);

                transition: color var(--trans-standard),
                            border-color var(--trans-standard);

                &:hover, &:focus, &:active, &:focus-visible {
                    color: var(--clr-1000);
                    border-color: var(--clr-600);
                }

                &:focus-visible {
                    outline: solid var(--outline-width) var(--clr-focus);
                    outline-offset: calc(-1 * var(--border-width));
                }
            }
        }
    }

    &__main {
        position: relative;
        min-width: 0px;

        padding-top: var(--section-pad-vrt);
        // avoid overlapping separator
        margin-top: var(--border-width);
    }

}



// === BREAKPOINTS ============================
@media only screen and (max-width: $breakpoint-laptop) {
    .section, .footer {
        gap: var(--pad-xxl);

        &__side {
            align-items: center;

            h2 {
                // make text vertical
                writing-mode: vertical-rl;
                overflow-wrap: normal;
                white-space: nowrap;

                // rotate 180 degress
                transform: rotate(180deg);
            }

            .skipLinks {
                flex-direction: column;
            }
        }        
    }
}