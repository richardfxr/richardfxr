// Partial SCSS file containing color variables



// ============================================
// COLORS
// ============================================

$light: (    
    // main colors
    1000: #000000,             // active font color
    1000-trans: rgba(0, 0, 0, 0),
    900: #181818,              // brightest font color
    800: #333333,              // brighter font color
    700: #4F4F4F,              // non-active font color
    600: #6B6B6B,              // lowest font color for WCAG level AAA contrast
    300: #A8A8A8,              // brighter border gray
    200: #C9C9C9,              // main border gray
    100: #EDEDED,              // main background color
    100-trans: rgba(237, 237, 237, 0),
    0: #FFFFFF,

    // accents
    rblue: #0093A3,            // Richard blue, the one and only
    rblue-hover: #007f8d,      // Richard blue on hover
    rblue-active: #00717e,     // Richard blue when active
    focus: #ff9800,            // focus outline color
);

$light-highContrast: (    
    // main colors
    1000: #000000,             // active font color
    1000-trans: rgba(0, 0, 0, 0),
    900: #0f0f0f,              // brightest font color
    800: #292929,              // brighter font color
    700: #424242,              // non-active font color
    600: #595959,              // lowest font color for WCAG level AAA contrast
    300: #595959,              // brighter border gray
    200: #595959,              // main border gray
    100: #FFFFFF,              // main background color
    100-trans: rgba(256, 256, 256, 0),
    0: #FFFFFF,

    // accents
    rblue: #0093A3,            // Richard blue, the one and only
    rblue-hover: #007f8d,      // Richard blue on hover
    rblue-active: #00717e,     // Richard blue when active
    focus: #ff9800,            // focus outline color
);

$dark: (    
    // main colors
    1000: #FFFFFF,             // active font color
    1000-trans: rgba(255, 255, 255, 0),
    900: #e2e2e2,              // brightest font color
    800: #CCCCCC,              // brighter font color
    700: #b8b8b8,              // non-active font color
    600: #A6A6A6,              // lowest font color for WCAG level AAA contrast
    300: #666666,              // brighter border gray
    200: #4d4d4d,              // main border gray
    100: #1A1A1A,              // main background color
    100-trans: rgba(26, 26, 26, 0),
    0: #000000,

    // accents
    rblue: #11d3e7,            // Richard blue, the one and only
    rblue-hover: #1ceaff,      // Richard blue on hover
    rblue-active: #6ef0ff,     // Richard blue when active
    focus: #ff9800,            // focus outline color
);

$dark-highContrast: (    
    // main colors
    1000: #FFFFFF,             // active font color
    1000-trans: rgba(255, 255, 255, 0),
    900: #e2e2e2,              // brightest font color
    800: #CCCCCC,              // brighter font color
    700: #B8B8B8,              // non-active font color
    600: #969696,              // lowest font color for WCAG level AAA contrast
    300: #969696,              // brighter border gray
    200: #969696,              // main border gray
    100: #000000,              // main background color
    100-trans: rgba(0, 0, 0, 0),
    0: #000000,

    // accents
    rblue: #11d3e7,            // Richard blue, the one and only
    rblue-hover: #1ceaff,      // Richard blue on hover
    rblue-active: #6ef0ff,     // Richard blue when active
    focus: #ff9800,            // focus outline color
);

:root {
    // parse $light into CSS variables
    @each $name, $value in $light {
        --clr-#{$name}: #{$value};
    }
    color-scheme: light;
}

[data-contrast="high"] {
    // parse $ligh-highContrast into CSS variables
    @each $name, $value in $light-highContrast {
        --clr-#{$name}: #{$value};
    }
    color-scheme: light;
}

[data-colorScheme="dark"] {
    // parse $dark into CSS variables
    @each $name, $value in $dark {
        --clr-#{$name}: #{$value};
    }
    color-scheme: dark;
}

[data-colorScheme="dark"][data-contrast="high"] {
    // parse $dark-highContrast into CSS variables
    @each $name, $value in $dark-highContrast {
        --clr-#{$name}: #{$value};
    }
    color-scheme: dark;
}


// === A11Y ===================================
@media (prefers-color-scheme: dark) {
    [data-colorScheme="auto"] {
        // parse $dark into CSS variables
        @each $name, $value in $dark {
            --clr-#{$name}: #{$value};
        }
        color-scheme: dark;
    }

    [data-colorScheme="auto"][data-contrast="high"] {
        // parse $dark-highContrast into CSS variables
        @each $name, $value in $dark-highContrast {
            --clr-#{$name}: #{$value};
        }
        color-scheme: dark;
    }
}

@media (prefers-contrast: more) {
    [data-contrast="auto"] {
        // parse $ligh-highContrast into CSS variables
        @each $name, $value in $light-highContrast {
            --clr-#{$name}: #{$value};
        }
        color-scheme: light;
    }

    [data-colorScheme="dark"][data-contrast="auto"] {
        // parse $dark-highContrast into CSS variables
        @each $name, $value in $dark-highContrast {
            --clr-#{$name}: #{$value};
        }
        color-scheme: dark;
    }
}

@media (prefers-color-scheme: dark) and (prefers-contrast: more) {
    [data-colorScheme="auto"][data-contrast="auto"] {
        // parse $dark-highContrast into CSS variables
        @each $name, $value in $dark-highContrast {
            --clr-#{$name}: #{$value};
        }
        color-scheme: dark;
    }
}

@media print {
    :root {
        // parse $ligh-highContrast into CSS variables
        @each $name, $value in $light-highContrast {
            --clr-#{$name}: #{$value};
        }

        // replace border color
        --clr-200: #B8B8B8;
        --clr-300: #B8B8B8;
    }
}